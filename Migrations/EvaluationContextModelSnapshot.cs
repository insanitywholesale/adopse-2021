// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using adopse_2021.Models;

#nullable disable

namespace adopse_2021.Migrations
{
    [DbContext(typeof(EvaluationContext))]
    partial class EvaluationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("adopse_2021.Models.A", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("As");
                });

            modelBuilder.Entity("adopse_2021.Models.Evaluation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("IsGraded")
                        .HasColumnType("boolean");

                    b.Property<long?>("QuestionsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("QuestionsId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("adopse_2021.Models.EvaluationEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("EvaluationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EvaluatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EvaluationId");

                    b.HasIndex("EvaluatorId");

                    b.HasIndex("StatusId");

                    b.ToTable("EvaluationEvents");
                });

            modelBuilder.Entity("adopse_2021.Models.EvaluationEventStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("EvaluationEventStatus");
                });

            modelBuilder.Entity("adopse_2021.Models.EvalueeParticipation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AnswersId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EvaluationEventId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EvalueeId")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AnswersId");

                    b.HasIndex("EvaluationEventId");

                    b.HasIndex("EvalueeId");

                    b.ToTable("EvalueeParticipations");
                });

            modelBuilder.Entity("adopse_2021.Models.MultipleChoiceAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("boolean");

                    b.Property<long?>("MultipleChoiceQuestionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SelectedByEvaluee")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("MultipleChoiceQuestionId");

                    b.ToTable("MultipleChoiceAnswers");
                });

            modelBuilder.Entity("adopse_2021.Models.MultipleChoiceQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("HasCorrectAnswer")
                        .HasColumnType("boolean");

                    b.Property<string>("Heading")
                        .HasColumnType("text");

                    b.Property<bool>("IsGraded")
                        .HasColumnType("boolean");

                    b.Property<long?>("QId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("QId");

                    b.ToTable("MultipleChoiceQuestions");
                });

            modelBuilder.Entity("adopse_2021.Models.OpenAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentFromEvaluee")
                        .HasColumnType("text");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AId");

                    b.HasIndex("CreatedById");

                    b.ToTable("OpenAnswers");
                });

            modelBuilder.Entity("adopse_2021.Models.OpenQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<string>("Heading")
                        .HasColumnType("text");

                    b.Property<bool>("IsGraded")
                        .HasColumnType("boolean");

                    b.Property<long?>("QId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("QId");

                    b.ToTable("OpenQuestions");
                });

            modelBuilder.Entity("adopse_2021.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("adopse_2021.Models.Q", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Qs");
                });

            modelBuilder.Entity("adopse_2021.Models.Evaluation", b =>
                {
                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("adopse_2021.Models.Q", "Questions")
                        .WithMany()
                        .HasForeignKey("QuestionsId");

                    b.Navigation("CreatedBy");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("adopse_2021.Models.EvaluationEvent", b =>
                {
                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("adopse_2021.Models.Evaluation", "Evaluation")
                        .WithMany()
                        .HasForeignKey("EvaluationId");

                    b.HasOne("adopse_2021.Models.Person", "Evaluator")
                        .WithMany()
                        .HasForeignKey("EvaluatorId");

                    b.HasOne("adopse_2021.Models.EvaluationEventStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("CreatedBy");

                    b.Navigation("Evaluation");

                    b.Navigation("Evaluator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("adopse_2021.Models.EvalueeParticipation", b =>
                {
                    b.HasOne("adopse_2021.Models.A", "Answers")
                        .WithMany()
                        .HasForeignKey("AnswersId");

                    b.HasOne("adopse_2021.Models.EvaluationEvent", null)
                        .WithMany("EvalueeParticipations")
                        .HasForeignKey("EvaluationEventId");

                    b.HasOne("adopse_2021.Models.Person", "Evaluee")
                        .WithMany()
                        .HasForeignKey("EvalueeId");

                    b.Navigation("Answers");

                    b.Navigation("Evaluee");
                });

            modelBuilder.Entity("adopse_2021.Models.MultipleChoiceAnswer", b =>
                {
                    b.HasOne("adopse_2021.Models.A", null)
                        .WithMany("MultipleChoiceAnswers")
                        .HasForeignKey("AId");

                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("adopse_2021.Models.MultipleChoiceQuestion", null)
                        .WithMany("Answers")
                        .HasForeignKey("MultipleChoiceQuestionId");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("adopse_2021.Models.MultipleChoiceQuestion", b =>
                {
                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("adopse_2021.Models.Q", null)
                        .WithMany("MultipleChoiceQuestions")
                        .HasForeignKey("QId");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("adopse_2021.Models.OpenAnswer", b =>
                {
                    b.HasOne("adopse_2021.Models.A", null)
                        .WithMany("OpenAnswers")
                        .HasForeignKey("AId");

                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("adopse_2021.Models.OpenQuestion", b =>
                {
                    b.HasOne("adopse_2021.Models.OpenAnswer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId");

                    b.HasOne("adopse_2021.Models.Person", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("adopse_2021.Models.Q", null)
                        .WithMany("OpenQuestions")
                        .HasForeignKey("QId");

                    b.Navigation("Answer");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("adopse_2021.Models.A", b =>
                {
                    b.Navigation("MultipleChoiceAnswers");

                    b.Navigation("OpenAnswers");
                });

            modelBuilder.Entity("adopse_2021.Models.EvaluationEvent", b =>
                {
                    b.Navigation("EvalueeParticipations");
                });

            modelBuilder.Entity("adopse_2021.Models.MultipleChoiceQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("adopse_2021.Models.Q", b =>
                {
                    b.Navigation("MultipleChoiceQuestions");

                    b.Navigation("OpenQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
